[{"/Users/Steve/Desktop/Projects/search-stock/search-stock/src/index.js":"1","/Users/Steve/Desktop/Projects/search-stock/search-stock/src/reportWebVitals.js":"2","/Users/Steve/Desktop/Projects/search-stock/search-stock/src/App.js":"3","/Users/Steve/Desktop/Projects/search-stock/search-stock/src/firebase.js":"4","/Users/Steve/Desktop/Projects/search-stock/search-stock/src/components/Header.js":"5","/Users/Steve/Desktop/Projects/search-stock/search-stock/src/API/unsplash.js":"6","/Users/Steve/Desktop/Projects/search-stock/search-stock/src/components/Mainbody.js":"7","/Users/Steve/Desktop/Projects/search-stock/search-stock/src/components/Post.js":"8"},{"size":500,"mtime":1611630319025,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1611630319025,"results":"11","hashOfConfig":"10"},{"size":1743,"mtime":1612837156040,"results":"12","hashOfConfig":"10"},{"size":824,"mtime":1613102669284,"results":"13","hashOfConfig":"10"},{"size":3016,"mtime":1612836870805,"results":"14","hashOfConfig":"10"},{"size":251,"mtime":1612819320206,"results":"15","hashOfConfig":"10"},{"size":425,"mtime":1612832891851,"results":"16","hashOfConfig":"10"},{"size":553,"mtime":1612833161248,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"vtn5a5",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/Steve/Desktop/Projects/search-stock/search-stock/src/index.js",[],["37","38"],"/Users/Steve/Desktop/Projects/search-stock/search-stock/src/reportWebVitals.js",[],"/Users/Steve/Desktop/Projects/search-stock/search-stock/src/App.js",["39","40","41","42"],"import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Mainbody from './components/Mainbody';\nimport unsplash from \"./API/unsplash\";\nimport db from './firebase';\n\nfunction App() {\n  const [pins, setNewPins] = useState([]);\n\n  // let pins = [];\n\n\n  //using axios for the call.\n  const makeAPIcall = (terms) => {\n   return unsplash.get(\"https://api.unsplash.com/search/photos\", {\n      params: {query: terms},\n    });\n  }\n\n  const onSearchSubmit = (terms) => {\n   // console.log(terms, 'terms at the app.js');\n   let promises = [];\n   let searchedPins = [];\n   promises.push(\n     makeAPIcall(terms).then((res) => {\n     let results = res.data.results;\n     results.map((pin) => {\n       searchedPins.push(pin);\n     });\n    })\n   );\n   Promise.all(promises).then(() => {\n     setNewPins(searchedPins);\n   });\n  };\n\n  const getNewPins = () => {\n    let promises = [];\n    let pinData = [];\n\n    \n    db.collection(\"terms\").onSnapshot((snapshot) => {\n      let snapshotData = snapshot.docs;\n\n      if (snapshotData.length >= 10) {\n        snapshotData = snapshotData.slice(\n          snapshotData.length - 5,\n          snapshotData.legnth\n          );\n      }\n\n  snapshotData.map((doc) => {\n    promises.push(\n      makeAPIcall(doc.data().terms).then((res) => {\n      console.log(res, \"does it save picture\");\n    })\n    )\n  });\n});\n};\n\n  useEffect (() => {\n    getNewPins();\n  }, []);\n\n//onSearchSubmit created function to send to header.js.\n  return (\n    <div className=\"app\">\n   <div className=\"app_header\">\n     <Header onSubmit={onSearchSubmit}/> \n     </div>\n     <div className=\"app_body\">\n      <Mainbody pins={pins}/>\n     </div>\n  \n    </div>\n  );\n}\n\nexport default App;\n","/Users/Steve/Desktop/Projects/search-stock/search-stock/src/firebase.js",[],"/Users/Steve/Desktop/Projects/search-stock/search-stock/src/components/Header.js",[],"/Users/Steve/Desktop/Projects/search-stock/search-stock/src/API/unsplash.js",[],"/Users/Steve/Desktop/Projects/search-stock/search-stock/src/components/Mainbody.js",[],"/Users/Steve/Desktop/Projects/search-stock/search-stock/src/components/Post.js",[],["43","44"],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":28,"column":24,"nodeType":"51","messageId":"52","endLine":28,"endColumn":26},{"ruleId":"53","severity":1,"message":"54","line":40,"column":9,"nodeType":"55","messageId":"56","endLine":40,"endColumn":16},{"ruleId":"49","severity":1,"message":"50","line":53,"column":26,"nodeType":"51","messageId":"52","endLine":53,"endColumn":28},{"ruleId":"57","severity":1,"message":"58","line":65,"column":6,"nodeType":"59","endLine":65,"endColumn":8,"suggestions":"60"},{"ruleId":"45","replacedBy":"61"},{"ruleId":"47","replacedBy":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'pinData' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getNewPins'. Either include it or remove the dependency array.","ArrayExpression",["65"],["63"],["64"],"no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [getNewPins]",{"range":"68","text":"69"},[1442,1444],"[getNewPins]"]